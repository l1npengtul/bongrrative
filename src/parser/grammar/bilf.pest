WHITESPACE = _{ " " | "\t" | "\n" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }
ARROW = _{ "=>" }
SINGLE_ARROW = _{ "->" }
PAREN_OPEN = _{ "(" }
PAREN_CLOSE = _{ ")" }
BLOCK_OPEN = _{ "{" }
BLOCK_CLOSE = _{ "}" }
SQUARE_OPEN = _{ "[" }
SQUARE_CLOSE = _{ "]" }
ANGLE_OPENR = _{ "<" }
ANGLE_OPENL = _{ ">" }
GREATER_OR_EQ = _{ ">=" }
LESS_OR_EQ = _{ "<=" }
EQUAL = _{ "=" }
EQUALITY = _{ "==" }
ISNOT = _{ "!=" }
AND = _{ "&&" }
OR = _{ "||" }
COMMA = _{ "," }
PIPE = _{ "|" }
EXCL = _{ "!" }
PRINT = _{ "*" }
TRY = _{ "?" }
CARROT = _{ "^" }
COLON = _{ ":" }
PERIOD = _{"."}
UNDERSCORE = _{"_"}
NAMESPACE = _{ "::" }
DOLLAR_SIGN = _{ "$" }

identifier = @{
    ASCII_ALPHA
    ~ (ASCII_ALPHA | ASCII_DIGIT)+
}

subaccess_identifier = ${
    identifier
    ~ (PERIOD ~ identifier)*
}

namespaced_identifier = ${
    identifier
    ~ (NAMESPACE ~ identifier)*
}

integer = @{
    "-"?
    ~ ASCII_DIGIT+
}
float = @{
    "-"?
    ~ ( ASCII_DIGIT+? ~ "." ~ ASCII_DIGIT+? )
}

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

variable_access = @{ DOLLAR_SIGN ~ (identifier | subaccess_identifier)}

choice_keyword = { "choice" }
import_keyword = { "import" }
if_keyword = { "if" }
elif_keyword = { "elif" }
else_keyword = { "else" }

public_keyword = { "public" }
recorded_keyword = { "recorded" }

import_statement = {
    import_keyword ~ (BLOCK_OPEN ~ identifier ~ (COMMA ~ identifier)+? ~ BLOCK_CLOSE ~ "from")? ~ string
}

rhai_expr = @{ "r" ~ SQUARE_OPEN ~ (!"]" ~ char)+ ~ SQUARE_CLOSE }

tag = {
    ("t" ~ BLOCK_OPEN ~ ANY ~ BLOCK_CLOSE) | ("t" ~ string)
}

tagged_string = @{
    string
    ~ (COLON ~ tag)?
}

character_string = @{ string ~ COLON ~ tagged_string }

print_text = @{
    DOLLAR_SIGN ~ character_string ~ (PIPE ~ character_string)*
}

literal = _{
    (integer | float | string | char)
}

array = @{
    BLOCK_OPEN ~ literal ~ (COMMA ~ literal)+? ~ BLOCK_CLOSE
}

function_start = @{ (SQUARE_OPEN ~ (public_keyword ~ " ")? ~ (recorded_keyword ~ " ")? ~ identifier ~ SQUARE_CLOSE) }
function_call = {
    SINGLE_ARROW ~ (identifier | namespaced_identifier)
}
function_declare = {
    function_start
    ~ (BLOCK_OPEN ~ valid+ ~ BLOCK_CLOSE | ARROW ~ valid)
}


valid = _{
    (rhai_expr | print_text | choice_text | raise_event | character_string | function_call | if_statement | identifier)
}

raise_event = @{
    "!!"
    ~ (character_string | string)
}

if_statement = {
    (if_keyword ~ rhai_expr ~ BLOCK_OPEN ~ valid ~ BLOCK_CLOSE)
    ~ (elif_keyword ~ rhai_expr ~ BLOCK_OPEN ~ valid ~ BLOCK_CLOSE)*
    ~ (else_keyword ~ rhai_expr ~ BLOCK_OPEN ~ valid ~ BLOCK_CLOSE)?
}

choice_text = {
    choice_keyword ~ print_text ~ BLOCK_OPEN
    ~ choice_option+
    ~ BLOCK_CLOSE
}

choice_pick_expr = {
    PAREN_OPEN ~ print_text ~ (COMMA ~ rhai_expr)? ~ PAREN_CLOSE
}

choice_option = {
    choice_pick_expr
    ~ ARROW
    ~ ((BLOCK_OPEN ~ valid+? ~ BLOCK_CLOSE) | valid)
}

file = {
    SOI
    ~ import_statement*
    ~ function_declare+
    ~ EOI
}

// block_start = { "{" }
// block_end = { "}" }
// operators = {
//     "=>" | "=" | "@" | "!" | "*" | "&" | "^" | "%" | "#" | "$" | "+" | "-" | "!!" | "/" | "?" | "<" | ">"
// }